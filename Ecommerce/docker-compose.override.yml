services:
  #catalogdb 27017:27017
  catalogdb:
    # name of the container
    container_name: catalogdb 
    # restart the container if it stops
    restart: always
    ports:
    # right: default port of mongodb, left: port of my host machine
     - "27017:27017" 
    volumes:
    # mongo_data is the name of the volume that will be created
    # /data/db is the path where the data will be stored in the mongo container
    # volumes are used to persist data generated by and used by Docker containers
     - "mongo_data:/data/db" 
  
  #basketdb 6379:6379
  basketdb:
    container_name: basketdb
    restart: always
    # 6379 is the default port of redis
    ports:
      - "6379:6379"

  #discountdb 5432:5432
  discountdb:
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Password@1
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  #orderdb 1433:1433
  orderdb:
    container_name: orderdb
    environment:
      SA_PASSWORD: "Rahul1234567"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - orderdb_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Rahul1234567' -Q 'select 1'"]
      interval: 10s
      timeout: 10s
      retries: 3
 
  #catalog.api 9000:8080
  catalog.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      # __ instead of : because of the way the environment variables are parsed in the .NET Core configuration system
      # DatabaseSettings__ConnectionString means DatabaseSettings:ConnectionString in the appsettings.json file
      - "DatabaseSettings__ConnectionString=mongodb://catalogdb:27017"
      - "DatabaseSettings__DatabaseName=CatalogDb"
      - "DatabaseSettings__CollectionName=Products"
      - "DatabaseSettings__BrandsCollection=Brands"
      - "DatabaseSettings__TypesCollection=Types"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"  
    depends_on:
      - catalogdb
    ports:
        # Now, any traffic sent to port 9000 on your host machine will be forwarded to port 8080 within the container. 
        # HOST_PORT:CONTAINER_PORT
      - "9000:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
  
  #basket.api 9001:8080
  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__Redis=basketdb:6379"
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_URLS=http://*:8080
      - "GrpcSettings__DiscountUrl=http://discount.api:8080"
      - "EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"  
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "9001:8080"
 
  #discount.api 9002:8080
  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080
      - "DatabaseSettings__ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=Password@1;"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"  
    depends_on:
       discountdb:
         condition: service_healthy
    ports:
      - "9002:8080"

  #ordering.api 9003:8080
  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080 
      - "ConnectionStrings__OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=Rahul1234567;TrustServerCertificate=True" 
      - "EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"  
    depends_on:
     - orderdb
     - rabbitmq
    ports:
     - "9003:8080"       

  #portainer 9090:9000
  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:9000"
      # 9000 for the dashboard of portainer
      - "9090:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  #RabbitMQ 15672 5672
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
    - "15672:15672"
    - "5672:5672"

  #postgresAdmin 5050:80
  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@eCommerce.net
      - PGADMIN_DEFAULT_PASSWORD=Password@1
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
      
  #Elasticsearch 9200:9200
  elasticsearch:
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
  
  #Kibana 5601:5601
  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
      
  #ocelot 9010:80
  ocelot.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"  
    depends_on:
      - identityserveraspnetidentity
      - catalog.api
      - basket.api
      - discount.api
      - ordering.api
    ports:
      - "9010:80"

  #IdentityServer 44300:8080
  identityserveraspnetidentity:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
    ports:
      - "44300:8081"
      - "44301:8080"

  #reverseproxy 44344:44344 ssl https
  # reverseproxy:
  #   container_name: nginxgateway
  #   restart: always
  #   ports:
  #     - "44344:44344"
  #   depends_on:
  #     - identityserveraspnetidentity
  #     - catalog.api
  #     - basket.api
  #     - discount.api
  #     - ordering.api