services:
  #catalogdb 27017
  catalogdb:
    # name of the container
    container_name: catalogdb 
    # restart the container if it stops
    restart: always
    ports:
    # right: default port of mongodb, left: port of my host machine
     - "27017:27017" 
    volumes:
    # mongo_data is the name of the volume that will be created
    # /data/db is the path where the data will be stored in the mongo container
    # volumes are used to persist data generated by and used by Docker containers
     - "mongo_data:/data/db" 
  
  #basketdb 6379
  basketdb:
    container_name: basketdb
    restart: always
    # 6379 is the default port of redis
    ports:
      - "6379:6379"

  #discountdb 5432
  discountdb:
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Password@1
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  #catalog.api 8000
  catalog.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # __ instead of : because of the way the environment variables are parsed in the .NET Core configuration system
      # DatabaseSettings__ConnectionString means DatabaseSettings:ConnectionString in the appsettings.json file
      - "DatabaseSettings__ConnectionString=mongodb://catalogdb:27017"
      - "DatabaseSettings__DatabaseName=CatalogDb"
      - "DatabaseSettings__CollectionName=Products"
      - "DatabaseSettings__BrandsCollection=Brands"
      - "DatabaseSettings__TypesCollection=Types" 
    depends_on:
      - catalogdb
    ports:
        # Now, any traffic sent to port 8000 on your host machine will be forwarded to port 8080 within the container. 
        # HOST_PORT:CONTAINER_PORT
      - "8000:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
  
  #basket.api 8001
  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__Redis=basketdb:6379"
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      - basketdb
    ports:
      - "8001:8080"
  
  #portainer 9090
  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      # 9000 for the dashboard of portainer
      - "9090:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  #postgresAdmin 5050
  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@eCommerce.net
      - PGADMIN_DEFAULT_PASSWORD=Password@1
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin 

  #discount.api 8002
  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=Password@1;"
    depends_on:
       discountdb:
         condition: service_healthy
    ports:
      - "8002:8080"

